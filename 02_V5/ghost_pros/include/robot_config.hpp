/////////////////////////////////////////////////////////////////////
/// This file was automatically generated by ghost_v5_interfaces. ///
/// DO NOT MODIFY, IT WILL BE DELETED ON THE NEXT COMPILE.        ///
/////////////////////////////////////////////////////////////////////

#include <memory>
#include "ghost_v5_interfaces/devices/device_config_map.hpp"
#include "ghost_v5_interfaces/devices/motor_device_interface.hpp"
#include "ghost_v5_interfaces/devices/rotation_sensor_device_interface.hpp"
#include "ghost_v5_interfaces/devices/joystick_device_interface.hpp"

// This is externed as raw C code so we can resolve the symbols in the shared object easily for unit testing.
// It returns a raw pointer to a dynamically allocated object, so if you are poking around, please wrap in a smart pointer!
extern "C" ghost_v5_interfaces::devices::DeviceConfigMap* getRobotConfig(void) {
	ghost_v5_interfaces::devices::DeviceConfigMap* robot_config = new ghost_v5_interfaces::devices::DeviceConfigMap;

	std::shared_ptr<ghost_v5_interfaces::devices::RotationSensorDeviceConfig> steering_back_right = std::make_shared<ghost_v5_interfaces::devices::RotationSensorDeviceConfig>();
	steering_back_right->port = 20;
	steering_back_right->name = "steering_back_right";
	steering_back_right->type = ghost_v5_interfaces::devices::device_type_e::ROTATION_SENSOR;
	steering_back_right->reversed = true;
	steering_back_right->data_rate = 5;
	robot_config->addDeviceConfig(steering_back_right);

	std::shared_ptr<ghost_v5_interfaces::devices::MotorDeviceConfig> drive_blr = std::make_shared<ghost_v5_interfaces::devices::MotorDeviceConfig>();
	drive_blr->port = 13;
	drive_blr->name = "drive_blr";
	drive_blr->type = ghost_v5_interfaces::devices::device_type_e::MOTOR;
	drive_blr->reversed = false;
	drive_blr->encoder_units = ghost_v5_interfaces::devices::ghost_encoder_unit::ENCODER_DEGREES;
	drive_blr->gearset = ghost_v5_interfaces::devices::ghost_gearset::GEARSET_600;
	drive_blr->brake_mode = ghost_v5_interfaces::devices::ghost_brake_mode::BRAKE_MODE_COAST;
	drive_blr->filter_config.cutoff_frequency = 100.000000;
	drive_blr->filter_config.damping_ratio = 0.707000;
	drive_blr->filter_config.timestep = 0.010000;
	drive_blr->model_config.free_speed = 120.000000;
	drive_blr->model_config.stall_torque = 3.600000;
	drive_blr->model_config.free_current = 0.140000;
	drive_blr->model_config.stall_current = 4.250000;
	drive_blr->model_config.nominal_voltage = 12.000000;
	drive_blr->model_config.gear_ratio = 6.000000;
	drive_blr->controller_config.pos_gain = 0.000000;
	drive_blr->controller_config.vel_gain = 10.000000;
	drive_blr->controller_config.ff_vel_gain = 1.000000;
	drive_blr->controller_config.ff_torque_gain = 0.000000;
	robot_config->addDeviceConfig(drive_blr);

	std::shared_ptr<ghost_v5_interfaces::devices::MotorDeviceConfig> drive_fll = std::make_shared<ghost_v5_interfaces::devices::MotorDeviceConfig>();
	drive_fll->port = 5;
	drive_fll->name = "drive_fll";
	drive_fll->type = ghost_v5_interfaces::devices::device_type_e::MOTOR;
	drive_fll->reversed = false;
	drive_fll->encoder_units = ghost_v5_interfaces::devices::ghost_encoder_unit::ENCODER_DEGREES;
	drive_fll->gearset = ghost_v5_interfaces::devices::ghost_gearset::GEARSET_600;
	drive_fll->brake_mode = ghost_v5_interfaces::devices::ghost_brake_mode::BRAKE_MODE_COAST;
	drive_fll->filter_config.cutoff_frequency = 100.000000;
	drive_fll->filter_config.damping_ratio = 0.707000;
	drive_fll->filter_config.timestep = 0.010000;
	drive_fll->model_config.free_speed = 120.000000;
	drive_fll->model_config.stall_torque = 3.600000;
	drive_fll->model_config.free_current = 0.140000;
	drive_fll->model_config.stall_current = 4.250000;
	drive_fll->model_config.nominal_voltage = 12.000000;
	drive_fll->model_config.gear_ratio = 6.000000;
	drive_fll->controller_config.pos_gain = 0.000000;
	drive_fll->controller_config.vel_gain = 10.000000;
	drive_fll->controller_config.ff_vel_gain = 1.000000;
	drive_fll->controller_config.ff_torque_gain = 0.000000;
	robot_config->addDeviceConfig(drive_fll);

	std::shared_ptr<ghost_v5_interfaces::devices::MotorDeviceConfig> drive_frr = std::make_shared<ghost_v5_interfaces::devices::MotorDeviceConfig>();
	drive_frr->port = 7;
	drive_frr->name = "drive_frr";
	drive_frr->type = ghost_v5_interfaces::devices::device_type_e::MOTOR;
	drive_frr->reversed = false;
	drive_frr->encoder_units = ghost_v5_interfaces::devices::ghost_encoder_unit::ENCODER_DEGREES;
	drive_frr->gearset = ghost_v5_interfaces::devices::ghost_gearset::GEARSET_600;
	drive_frr->brake_mode = ghost_v5_interfaces::devices::ghost_brake_mode::BRAKE_MODE_COAST;
	drive_frr->filter_config.cutoff_frequency = 100.000000;
	drive_frr->filter_config.damping_ratio = 0.707000;
	drive_frr->filter_config.timestep = 0.010000;
	drive_frr->model_config.free_speed = 120.000000;
	drive_frr->model_config.stall_torque = 3.600000;
	drive_frr->model_config.free_current = 0.140000;
	drive_frr->model_config.stall_current = 4.250000;
	drive_frr->model_config.nominal_voltage = 12.000000;
	drive_frr->model_config.gear_ratio = 6.000000;
	drive_frr->controller_config.pos_gain = 0.000000;
	drive_frr->controller_config.vel_gain = 10.000000;
	drive_frr->controller_config.ff_vel_gain = 1.000000;
	drive_frr->controller_config.ff_torque_gain = 0.000000;
	robot_config->addDeviceConfig(drive_frr);

	std::shared_ptr<ghost_v5_interfaces::devices::MotorDeviceConfig> drive_flr = std::make_shared<ghost_v5_interfaces::devices::MotorDeviceConfig>();
	drive_flr->port = 3;
	drive_flr->name = "drive_flr";
	drive_flr->type = ghost_v5_interfaces::devices::device_type_e::MOTOR;
	drive_flr->reversed = false;
	drive_flr->encoder_units = ghost_v5_interfaces::devices::ghost_encoder_unit::ENCODER_DEGREES;
	drive_flr->gearset = ghost_v5_interfaces::devices::ghost_gearset::GEARSET_600;
	drive_flr->brake_mode = ghost_v5_interfaces::devices::ghost_brake_mode::BRAKE_MODE_COAST;
	drive_flr->filter_config.cutoff_frequency = 100.000000;
	drive_flr->filter_config.damping_ratio = 0.707000;
	drive_flr->filter_config.timestep = 0.010000;
	drive_flr->model_config.free_speed = 120.000000;
	drive_flr->model_config.stall_torque = 3.600000;
	drive_flr->model_config.free_current = 0.140000;
	drive_flr->model_config.stall_current = 4.250000;
	drive_flr->model_config.nominal_voltage = 12.000000;
	drive_flr->model_config.gear_ratio = 6.000000;
	drive_flr->controller_config.pos_gain = 0.000000;
	drive_flr->controller_config.vel_gain = 10.000000;
	drive_flr->controller_config.ff_vel_gain = 1.000000;
	drive_flr->controller_config.ff_torque_gain = 0.000000;
	robot_config->addDeviceConfig(drive_flr);

	std::shared_ptr<ghost_v5_interfaces::devices::MotorDeviceConfig> drive_brl = std::make_shared<ghost_v5_interfaces::devices::MotorDeviceConfig>();
	drive_brl->port = 17;
	drive_brl->name = "drive_brl";
	drive_brl->type = ghost_v5_interfaces::devices::device_type_e::MOTOR;
	drive_brl->reversed = false;
	drive_brl->encoder_units = ghost_v5_interfaces::devices::ghost_encoder_unit::ENCODER_DEGREES;
	drive_brl->gearset = ghost_v5_interfaces::devices::ghost_gearset::GEARSET_600;
	drive_brl->brake_mode = ghost_v5_interfaces::devices::ghost_brake_mode::BRAKE_MODE_COAST;
	drive_brl->filter_config.cutoff_frequency = 100.000000;
	drive_brl->filter_config.damping_ratio = 0.707000;
	drive_brl->filter_config.timestep = 0.010000;
	drive_brl->model_config.free_speed = 120.000000;
	drive_brl->model_config.stall_torque = 3.600000;
	drive_brl->model_config.free_current = 0.140000;
	drive_brl->model_config.stall_current = 4.250000;
	drive_brl->model_config.nominal_voltage = 12.000000;
	drive_brl->model_config.gear_ratio = 6.000000;
	drive_brl->controller_config.pos_gain = 0.000000;
	drive_brl->controller_config.vel_gain = 10.000000;
	drive_brl->controller_config.ff_vel_gain = 1.000000;
	drive_brl->controller_config.ff_torque_gain = 0.000000;
	robot_config->addDeviceConfig(drive_brl);

	std::shared_ptr<ghost_v5_interfaces::devices::RotationSensorDeviceConfig> steering_back_left = std::make_shared<ghost_v5_interfaces::devices::RotationSensorDeviceConfig>();
	steering_back_left->port = 11;
	steering_back_left->name = "steering_back_left";
	steering_back_left->type = ghost_v5_interfaces::devices::device_type_e::ROTATION_SENSOR;
	steering_back_left->reversed = true;
	steering_back_left->data_rate = 5;
	robot_config->addDeviceConfig(steering_back_left);

	std::shared_ptr<ghost_v5_interfaces::devices::MotorDeviceConfig> drive_frl = std::make_shared<ghost_v5_interfaces::devices::MotorDeviceConfig>();
	drive_frl->port = 9;
	drive_frl->name = "drive_frl";
	drive_frl->type = ghost_v5_interfaces::devices::device_type_e::MOTOR;
	drive_frl->reversed = false;
	drive_frl->encoder_units = ghost_v5_interfaces::devices::ghost_encoder_unit::ENCODER_DEGREES;
	drive_frl->gearset = ghost_v5_interfaces::devices::ghost_gearset::GEARSET_600;
	drive_frl->brake_mode = ghost_v5_interfaces::devices::ghost_brake_mode::BRAKE_MODE_COAST;
	drive_frl->filter_config.cutoff_frequency = 100.000000;
	drive_frl->filter_config.damping_ratio = 0.707000;
	drive_frl->filter_config.timestep = 0.010000;
	drive_frl->model_config.free_speed = 120.000000;
	drive_frl->model_config.stall_torque = 3.600000;
	drive_frl->model_config.free_current = 0.140000;
	drive_frl->model_config.stall_current = 4.250000;
	drive_frl->model_config.nominal_voltage = 12.000000;
	drive_frl->model_config.gear_ratio = 6.000000;
	drive_frl->controller_config.pos_gain = 0.000000;
	drive_frl->controller_config.vel_gain = 10.000000;
	drive_frl->controller_config.ff_vel_gain = 1.000000;
	drive_frl->controller_config.ff_torque_gain = 0.000000;
	robot_config->addDeviceConfig(drive_frl);

	std::shared_ptr<ghost_v5_interfaces::devices::RotationSensorDeviceConfig> steering_front_left = std::make_shared<ghost_v5_interfaces::devices::RotationSensorDeviceConfig>();
	steering_front_left->port = 1;
	steering_front_left->name = "steering_front_left";
	steering_front_left->type = ghost_v5_interfaces::devices::device_type_e::ROTATION_SENSOR;
	steering_front_left->reversed = true;
	steering_front_left->data_rate = 5;
	robot_config->addDeviceConfig(steering_front_left);

	std::shared_ptr<ghost_v5_interfaces::devices::MotorDeviceConfig> drive_brr = std::make_shared<ghost_v5_interfaces::devices::MotorDeviceConfig>();
	drive_brr->port = 19;
	drive_brr->name = "drive_brr";
	drive_brr->type = ghost_v5_interfaces::devices::device_type_e::MOTOR;
	drive_brr->reversed = false;
	drive_brr->encoder_units = ghost_v5_interfaces::devices::ghost_encoder_unit::ENCODER_DEGREES;
	drive_brr->gearset = ghost_v5_interfaces::devices::ghost_gearset::GEARSET_600;
	drive_brr->brake_mode = ghost_v5_interfaces::devices::ghost_brake_mode::BRAKE_MODE_COAST;
	drive_brr->filter_config.cutoff_frequency = 100.000000;
	drive_brr->filter_config.damping_ratio = 0.707000;
	drive_brr->filter_config.timestep = 0.010000;
	drive_brr->model_config.free_speed = 120.000000;
	drive_brr->model_config.stall_torque = 3.600000;
	drive_brr->model_config.free_current = 0.140000;
	drive_brr->model_config.stall_current = 4.250000;
	drive_brr->model_config.nominal_voltage = 12.000000;
	drive_brr->model_config.gear_ratio = 6.000000;
	drive_brr->controller_config.pos_gain = 0.000000;
	drive_brr->controller_config.vel_gain = 10.000000;
	drive_brr->controller_config.ff_vel_gain = 1.000000;
	drive_brr->controller_config.ff_torque_gain = 0.000000;
	robot_config->addDeviceConfig(drive_brr);

	std::shared_ptr<ghost_v5_interfaces::devices::MotorDeviceConfig> drive_bll = std::make_shared<ghost_v5_interfaces::devices::MotorDeviceConfig>();
	drive_bll->port = 15;
	drive_bll->name = "drive_bll";
	drive_bll->type = ghost_v5_interfaces::devices::device_type_e::MOTOR;
	drive_bll->reversed = false;
	drive_bll->encoder_units = ghost_v5_interfaces::devices::ghost_encoder_unit::ENCODER_DEGREES;
	drive_bll->gearset = ghost_v5_interfaces::devices::ghost_gearset::GEARSET_600;
	drive_bll->brake_mode = ghost_v5_interfaces::devices::ghost_brake_mode::BRAKE_MODE_COAST;
	drive_bll->filter_config.cutoff_frequency = 100.000000;
	drive_bll->filter_config.damping_ratio = 0.707000;
	drive_bll->filter_config.timestep = 0.010000;
	drive_bll->model_config.free_speed = 120.000000;
	drive_bll->model_config.stall_torque = 3.600000;
	drive_bll->model_config.free_current = 0.140000;
	drive_bll->model_config.stall_current = 4.250000;
	drive_bll->model_config.nominal_voltage = 12.000000;
	drive_bll->model_config.gear_ratio = 6.000000;
	drive_bll->controller_config.pos_gain = 0.000000;
	drive_bll->controller_config.vel_gain = 10.000000;
	drive_bll->controller_config.ff_vel_gain = 1.000000;
	drive_bll->controller_config.ff_torque_gain = 0.000000;
	robot_config->addDeviceConfig(drive_bll);

	std::shared_ptr<ghost_v5_interfaces::devices::RotationSensorDeviceConfig> steering_front_right = std::make_shared<ghost_v5_interfaces::devices::RotationSensorDeviceConfig>();
	steering_front_right->port = 10;
	steering_front_right->name = "steering_front_right";
	steering_front_right->type = ghost_v5_interfaces::devices::device_type_e::ROTATION_SENSOR;
	steering_front_right->reversed = true;
	steering_front_right->data_rate = 5;
	robot_config->addDeviceConfig(steering_front_right);

	std::shared_ptr<ghost_v5_interfaces::devices::JoystickDeviceConfig> joy_master = std::make_shared<ghost_v5_interfaces::devices::JoystickDeviceConfig>();
	joy_master->port = -1;
	joy_master->name = "joy_master";
	joy_master->type = ghost_v5_interfaces::devices::device_type_e::JOYSTICK;
	joy_master->is_partner = false;
	robot_config->addDeviceConfig(joy_master);

	return robot_config;
}
